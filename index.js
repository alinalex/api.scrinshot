const express = require('express');
var cors = require('cors');
const dotenv = require('dotenv');
const userRouter = require('./api/user');
const authRouter = require('./api/auth');
const profileRouter = require('./api/profile');
const screenshotRouter = require('./api/screenshot');
const cookieParser = require('cookie-parser');
// const automate = require('./cron');
var cloudinary = require('cloudinary').v2;
const puppeteer = require('puppeteer');

// Load environment variables from .env file, where API keys and passwords are configured. It also has this possibility: { path: "filename" }
dotenv.config();

// connect database
const connectDB = require('./config/db');
connectDB();

const app = express();

// init middleware
app.use(cookieParser());
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cors());

// define api routes
app.use('/api/user', userRouter);
app.use('/api/auth', authRouter);
app.use('/api/profile', profileRouter);
app.use('/api/screenshot', screenshotRouter);

// const letsAutomate = async (id, time, url) => {
//   const test = await automate(id, time, url);
//   console.log('test: ' + test);
// };

// // letsAutomate('blabla', null, 'https://sadada.da');
// automate('5efde39cf8df3091e62ab180', null, 'https://alinrauta.com');

// upload an image
// cloudinary.uploader
//   .upload('unbundling-excel.png', { public_id: 'my_folder/bla' })
//   .then(function (image) {
//     console.log();
//     console.log('** File Upload (Promise)');
//     console.log(
//       "* public_id for the uploaded image is generated by Cloudinary's service."
//     );
//     console.log('* ' + image.public_id);
//     console.log('* ' + image.url);
//   })
//   .catch(function (err) {
//     console.log();
//     console.log('** File Upload (Promise)');
//     if (err) {
//       console.warn(err);
//     }
//   });

// delete all resources contained within a specific folder (including sub-folders)
// cloudinary.api
//   .delete_resources_by_prefix('my_folder/')
//   .then(function (image) {
//     console.log(image);
//   })
//   .catch(function (err) {
//     console.log();
//     console.log('** File Upload (Promise)');
//     if (err) {
//       console.warn(err);
//     }
//   });

// delete empty folder
// cloudinary.api
//   .delete_folder('my_folder')
//   .then(function (image) {
//     console.log(image);
//   })
//   .catch(function (err) {
//     console.log();
//     console.log('** File Upload (Promise)');
//     if (err) {
//       console.warn(err);
//     }
//   });

// delete one or more images (up to 100)
// cloudinary.api
//   .delete_resources(['image1'])
//   .then(function (image) {
//     console.log(image);
//   })
//   .catch(function (err) {
//     console.log();
//     console.log('** File Upload (Promise)');
//     if (err) {
//       console.warn(err);
//     }
//   });

// save screenshot from puppeteer to cloudinary
// takeScreenshot()
//   .then((screenshot) => uploadScreenshot(screenshot))
//   .then((result) => console.log(result));

// async function takeScreenshot() {
//   const browser = await puppeteer.launch({
//     defaultViewport: {
//       width: 1280,
//       height: 1024,
//     },
//   });

//   const page = await browser.newPage();

//   await page.goto('https://alinrauta.com', { waitUntil: 'networkidle2' });

//   const screenshot = await page.screenshot({
//     fullPage: true,
//     encoding: 'binary',
//   });

//   await browser.close();

//   return screenshot;
// }

// function uploadScreenshot(screenshot) {
//   return new Promise((resolve, reject) => {
//     const uploadOptions = {};
//     cloudinary.uploader
//       .upload_stream(uploadOptions, (error, result) => {
//         if (error) reject(error);
//         else resolve(result);
//       })
//       .end(screenshot);
//   });
// }

app.get('/', (req, res) =>
  res.send('api running and just been modified to be automatically')
);

const PORT = process.env.PORT || 5000;

app.listen(PORT, () => console.log(`server started on port ${PORT}`));
